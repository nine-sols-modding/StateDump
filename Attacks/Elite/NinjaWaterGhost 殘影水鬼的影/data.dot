strict digraph "Foo" {
	"rankdir"="LR";
	node ["shape"="box","fontname"="Helvetica"];
	edge ["fontname"="Helvetica"];
	subgraph "cluster_attacksensors" {
		"rank"="sink";
		"label"="Attack Sensors";
		"fontname"="Helvetica";
		"Level Once Sensor" ["shape"="plaintext","label"=<<TABLE border="0" cellspacing="0" cellborder="1" cellpadding="2"><TR><TD>Level Once Sensor  </TD></TR></TABLE>>]
		"Level Once Sensor_linked" ["shape"="box","style"="dotted","label"=<<TABLE border="0" cellspacing="0" cellborder="0" cellpadding="2"><TR><TD>DelayDoubleAttack  </TD></TR></TABLE>>,"margin"="0.05"]
		"Level Once Sensor" -> "Level Once Sensor_linked"  ["label"="QueueEnd","color"="aquamarine3","fontcolor"="aquamarine3"]
		"RunAwaySensor" ["shape"="plaintext","label"=<<TABLE border="0" cellspacing="0" cellborder="1" cellpadding="2"><TR><TD>RunAwaySensor  </TD></TR></TABLE>>]
		"AttackSensor" ["shape"="plaintext","label"=<<TABLE border="0" cellspacing="0" cellborder="1" cellpadding="2"><TR><TD>AttackSensor  </TD></TR></TABLE>>]
		"AttackSensor_linked" ["shape"="box","style"="dotted","label"=<<TABLE border="0" cellspacing="0" cellborder="0" cellpadding="2"><TR><TD>DelayDoubleAttack  </TD></TR><TR><TD>RollThrough  </TD></TR><TR><TD>DoubleAttack  </TD></TR><TR><TD>DelayDoubleAttack  </TD></TR></TABLE>>,"margin"="0.05"]
		"AttackSensor" -> "AttackSensor_linked"  ["label"="QueueEnd","color"="aquamarine3","fontcolor"="aquamarine3"]
		"DodgePredictSensor" ["shape"="plaintext","label"=<<TABLE border="0" cellspacing="0" cellborder="1" cellpadding="2"><TR><TD>DodgePredictSensor  </TD></TR><TR><TD align="left" balign="left"><FONT point-size="12" color="azure4">if: rollingCondition</FONT>  </TD></TR></TABLE>>]
		"DodgePredictSensor_linked" ["shape"="box","style"="dotted","label"=<<TABLE border="0" cellspacing="0" cellborder="0" cellpadding="2"><TR><TD>DelayDoubleAttack  </TD></TR></TABLE>>,"margin"="0.05"]
		"DodgePredictSensor" -> "DodgePredictSensor_linked"  ["label"="QueueEnd","color"="aquamarine3","fontcolor"="aquamarine3"]
		"AttackPredictSensor" ["shape"="plaintext","label"=<<TABLE border="0" cellspacing="0" cellborder="1" cellpadding="2"><TR><TD>AttackPredictSensor  </TD></TR><TR><TD align="left" balign="left"><FONT point-size="12" color="azure4">if: attackCondition</FONT>  </TD></TR></TABLE>>]
		"AttackPredictSensor_linked" ["shape"="box","style"="dotted","label"=<<TABLE border="0" cellspacing="0" cellborder="0" cellpadding="2"><TR><TD>DelayDoubleAttack  </TD></TR></TABLE>>,"margin"="0.05"]
		"AttackPredictSensor" -> "AttackPredictSensor_linked"  ["label"="QueueEnd","color"="aquamarine3","fontcolor"="aquamarine3"]
		"AttackPredictSensor_weight" ["shape"="box","style"="dotted","label"=<<TABLE border="0" cellspacing="0" cellborder="0" cellpadding="2"><TR><TD>1 RollThrough  </TD></TR></TABLE>>]
		"AttackPredictSensor" -> "AttackPredictSensor_weight"  ["label"="Weight","color"="aquamarine4","fontcolor"="aquamarine4"]
		"AttackRunToSensor" ["shape"="plaintext","label"=<<TABLE border="0" cellspacing="0" cellborder="1" cellpadding="2"><TR><TD>AttackRunToSensor  </TD></TR><TR><TD align="left" balign="left"><FONT point-size="12" color="azure4">if: state is Engaging</FONT>  </TD></TR></TABLE>>]
		"AttackRunToSensor_linked" ["shape"="box","style"="dotted","label"=<<TABLE border="0" cellspacing="0" cellborder="0" cellpadding="2"><TR><TD>DelayDoubleAttack  </TD></TR></TABLE>>,"margin"="0.05"]
		"AttackRunToSensor" -> "AttackRunToSensor_linked"  ["label"="QueueEnd","color"="aquamarine3","fontcolor"="aquamarine3"]
		"ShootAttackSensor" ["shape"="plaintext","label"=<<TABLE border="0" cellspacing="0" cellborder="1" cellpadding="2"><TR><TD>ShootAttackSensor  </TD></TR></TABLE>>]
		"AttackUpSensor" ["shape"="plaintext","label"=<<TABLE border="0" cellspacing="0" cellborder="1" cellpadding="2"><TR><TD>AttackUpSensor  </TD></TR><TR><TD align="left" balign="left"><FONT point-size="12" color="azure4">if not: block PlayerJump</FONT>  </TD></TR></TABLE>>]
		"AttackUpSensor_linked" ["shape"="box","style"="dotted","label"=<<TABLE border="0" cellspacing="0" cellborder="0" cellpadding="2"><TR><TD>DelayDoubleAttack  </TD></TR></TABLE>>,"margin"="0.05"]
		"AttackUpSensor" -> "AttackUpSensor_linked"  ["label"="QueueEnd","color"="aquamarine3","fontcolor"="aquamarine3"]
		"AttackDownSensor" ["shape"="plaintext","label"=<<TABLE border="0" cellspacing="0" cellborder="1" cellpadding="2"><TR><TD>AttackDownSensor  </TD></TR></TABLE>>]
		"AttackDownSensor_linked" ["shape"="box","style"="dotted","label"=<<TABLE border="0" cellspacing="0" cellborder="0" cellpadding="2"><TR><TD>DelayDoubleAttack  </TD></TR><TR><TD>RollThrough  </TD></TR><TR><TD>DoubleAttack  </TD></TR><TR><TD>DelayDoubleAttack  </TD></TR></TABLE>>,"margin"="0.05"]
		"AttackDownSensor" -> "AttackDownSensor_linked"  ["label"="QueueEnd","color"="aquamarine3","fontcolor"="aquamarine3"]
	}
	
	"DelayDoubleAttack" -> "DeadState"  ["color"="cornsilk3","fontcolor"="cornsilk3"]
	"DelayDoubleAttack_linked" ["shape"="box","style"="dotted","label"=<<TABLE border="0" cellspacing="0" cellborder="0" cellpadding="2"><TR><TD>Engaging  </TD></TR><TR><TD>Engaging  </TD></TR><TR><TD>Engaging  </TD></TR><TR><TD>DoubleAttack  </TD></TR><TR><TD>RollThrough  </TD></TR></TABLE>>,"margin"="0.05"]
	"DelayDoubleAttack" -> "DelayDoubleAttack_linked"  ["label"="QueueEnd","color"="aquamarine3","fontcolor"="aquamarine3"]
	"DelayDoubleAttack" ["shape"="plaintext","label"=<<TABLE border="0" cellspacing="0" cellborder="1" cellpadding="2"><TR><TD>DelayDoubleAttack  </TD></TR><TR><TD align="left" balign="left"><FONT point-size="12" color="azure4">2.00s: Done</FONT>  </TD></TR></TABLE>>]
	"DoubleAttack" -> "DeadState"  ["color"="cornsilk3","fontcolor"="cornsilk3"]
	"DoubleAttack" ["shape"="plaintext","label"=<<TABLE border="0" cellspacing="0" cellborder="1" cellpadding="2"><TR><TD>DoubleAttack  </TD></TR><TR><TD align="left" balign="left"><FONT point-size="12" color="azure4">1.00s: Done<br/>1.50s: LinkNextMove</FONT>  </TD></TR></TABLE>>]
	"Hide" -> "DeadState"  ["color"="cornsilk3","fontcolor"="cornsilk3"]
	"Hide" ["shape"="plaintext","label"=<<TABLE border="0" cellspacing="0" cellborder="1" cellpadding="2"><TR><TD>Hide  </TD></TR><TR><TD align="left" balign="left"><FONT point-size="12" color="azure4">1.50s: Done</FONT>  </TD></TR></TABLE>>]
	"HurtState" -> "PreAttack"  ["color"="cornsilk3","fontcolor"="cornsilk3"]
	"HurtState" ["shape"="plaintext","label"=<<TABLE border="0" cellspacing="0" cellborder="1" cellpadding="2"><TR><TD>HurtState  </TD></TR><TR><TD align="left" balign="left"><FONT point-size="12" color="azure4">0.17s: Done</FONT>  </TD></TR></TABLE>>]
	"Hurt_BigState" -> "PreAttack"  ["color"="cornsilk3","fontcolor"="cornsilk3"]
	"Hurt_BigState" ["shape"="plaintext","label"=<<TABLE border="0" cellspacing="0" cellborder="1" cellpadding="2"><TR><TD>Hurt_BigState  </TD></TR><TR><TD align="left" balign="left"><FONT point-size="12" color="azure4">1.00s: Done</FONT>  </TD></TR></TABLE>>]
	"PostureBreak" -> "PreAttack"  ["color"="cornsilk3","fontcolor"="cornsilk3"]
	"PostureBreak" ["shape"="plaintext","label"=<<TABLE border="0" cellspacing="0" cellborder="1" cellpadding="2"><TR><TD>PostureBreak  </TD></TR><TR><TD align="left" balign="left"><FONT point-size="12" color="azure4">1.50s: Done</FONT>  </TD></TR></TABLE>>]
	"RollThrough" -> "Engaging"  ["color"="cornsilk3","fontcolor"="cornsilk3"]
	"RollThrough_linked" ["shape"="box","style"="dotted","label"=<<TABLE border="0" cellspacing="0" cellborder="0" cellpadding="2"><TR><TD>Engaging  </TD></TR></TABLE>>,"margin"="0.05"]
	"RollThrough" -> "RollThrough_linked"  ["label"="QueueEnd","color"="aquamarine3","fontcolor"="aquamarine3"]
	"RollThrough" ["shape"="plaintext","label"=<<TABLE border="0" cellspacing="0" cellborder="1" cellpadding="2"><TR><TD>RollThrough  </TD></TR><TR><TD align="left" balign="left"><FONT point-size="12" color="azure4">0.50s: LinkNextMove<br/>0.58s: Done</FONT>  </TD></TR></TABLE>>]
	"Wandering_Idle" ["label"="Wandering_Idle (Init)"]
}
